<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="profilePictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        qJXGr3ieo//Z
</value>
  </data>
</root>